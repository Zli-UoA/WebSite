name: CI/CD

on:
  pull_request:
    types: [opened, synchronize]
jobs:
  lint:
    name: run lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install node_modules
        run: npm install
      - name: Lint
        run: npm run lint

  build_api:
    name: building api server
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install node_modules
        run: npm install
        working-directory: ./api
      - name: build
        run: npm run build
        working-directory: ./api
      - name: Upload building result
        uses: actions/upload-artifact@v1
        with:
          name: build_data-api
          path: api/dist

  build_storybook:
    name: building storybook
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install node_modules
        run: npm install
      - name: build
        run: npm run build:storybook
      - name: Upload building result
        uses: actions/upload-artifact@v1
        with:
          name: build_data-storybook
          path: storybook-static

  build_frontend:
    name: building frontend
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install node_modules
        run: npm install
      - name: build
        run: npm run build
      - name: Upload building result
        uses: actions/upload-artifact@v1
        with:
          name: build_data-frontend
          path: dist

  deploy:
    name: Deploy to now.sh
    needs: [build_api, build_storybook, build_frontend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Download building result for api
        uses: actions/download-artifact@v1
        with:
          name: build_data-api
      - name: Move file for api server
        run: mv ./build_data-api/dist ./api/

      - name: Download building result for storybook
        uses: actions/download-artifact@v1
        with:
          name: build_data-storybook
      - name: Move file for storybook
        run: mv ./build_data-storybook/storybook-static ./

      - name: Download building result for frontend
        uses: actions/download-artifact@v1
        with:
          name: build_data-frontend
      - name: Move file for frontend
        run: mv ./build_data-frontend/dist ./

      - name: Deploy to now.sh
        env:
          BUILD_ID: ${{ github.sha }}
          ZEIT_TOKEN: ${{ secrets.ZEIT_TOKEN }}
        run: ./bin/deploy.sh ./ ${{ github.event.repository.name }}-pr-${{ github.event.number }}.now.sh

  post_review_app_url:
    name: Post review app URL when PR opened
    runs-on: ubuntu-latest

    steps:
      - name: Post review app URL to the GitHub API
        if: github.event_name == 'pull_request' && github.event.action == 'opened'
        run: >
          curl
          -X POST
          -H "Authorization: token $GITHUB_TOKEN"
          -H "Accept: application/vnd.github.v3+json"
          --data "{ \"body\": \"Review-App was deployed.\nhttps://${{ github.event.repository.name }}-pr-${{ github.event.number }}-storybook.now.sh\nhttps://${{ github.event.repository.name }}-pr-${{ github.event.number }}.now.sh\" }"
          ${{ github.event.pull_request.comments_url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
